<?phpnamespace Project\AdminBundle\Form\User;use Symfony\Component\Form\AbstractType;use Symfony\Component\Form\Extension\Core\Type\EmailType;use Symfony\Component\Form\Extension\Core\Type\HiddenType;use Symfony\Component\Form\Extension\Core\Type\PasswordType;use Symfony\Component\Form\Extension\Core\Type\RepeatedType;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\OptionsResolver\OptionsResolver;class UserType extends AbstractType{    private $is_edit = false;    private $disabled = false;    /**     * {@inheritdoc}     */    public function buildForm(FormBuilderInterface $builder, array $options)    {        $data = $builder->getData();        if($data){            $id = $data->getId();            if($id){                $this->is_edit = true;                $this->disabled = true;            }        }        $builder//            ->add('profile',ProfileType::class,array(//                'data_class' => Profile::class,//                'label' => false,////                'mapped' =>true,////                'by_reference' => true//            ))            ->add('email', EmailType::class, array('label' => 'form.email', 'translation_domain' => 'FOSUserBundle'));//        $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event)//        {////            dump($event);//        });//        $builder->addEventListener(FormEvents::POST_SUBMIT, function (FormEvent $event)//        {//////            dump($event->getData());//            $event->getData()->getProfile()->setUser($event->getData());////            dump($event->getData());//////            exit;//        });////            $data = $event->getData();//            $form = $event->getForm();//            $id = $data->getId();//            if($id){//                $this->is_edit = true;//                $this->disabled = true;////                echo "sa";////                exit;//            }////            $form->add('username', null, array('label' => 'form.username', 'translation_domain' => 'FOSUserBundle','disabled' => $this->disabled));//,'disabled' => true,//        });        $builder->add('username', null, array('label' => 'form.username', 'translation_domain' => 'FOSUserBundle','disabled' => $this->disabled));//,'disabled' => true,        $builder->add('enabled', HiddenType::class, array('label' => false, 'data' => true))//            ->add('roles', HiddenType::class, array('label' => false,  'data' => "[ROLE_ADMIN]"))            ->add('plainPassword', RepeatedType::class, array(                'type' => PasswordType::class,                'options' => array(                    'translation_domain' => 'FOSUserBundle',                    'attr' => array(                        'autocomplete' => 'new-password',                    ),                ),                'first_options' => array('label' => 'form.password'),                'second_options' => array('label' => 'form.password_confirmation'),                'invalid_message' => 'fos_user.password.mismatch',            ))            ;//        ->add('profil');        // each entry in the array will be an "email" field    }    /**     * {@inheritdoc}     */    public function configureOptions(OptionsResolver $resolver)    {        $resolver->setDefaults(array(            'data_class' => 'Project\AdminBundle\Entity\User',        ));    }    /**     * {@inheritdoc}     */    public function getBlockPrefix()    {        return 'project_adminbundle_user';    }}